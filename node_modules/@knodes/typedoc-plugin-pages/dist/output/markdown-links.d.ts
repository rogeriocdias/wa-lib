import { RendererEvent } from 'typedoc';
import { IPluginComponent } from '@knodes/typedoc-pluginutils';
import { IPagesPluginThemeMethods } from './theme';
import type { PagesPlugin } from '../plugin';
export declare class MarkdownPagesLinks implements IPluginComponent<PagesPlugin> {
    readonly plugin: PagesPlugin;
    private readonly _themeMethods;
    private readonly _currentPageMemo;
    private readonly _markdownReplacer;
    private readonly _logger;
    private readonly _nodesReflections;
    constructor(plugin: PagesPlugin, _themeMethods: IPagesPluginThemeMethods, event: RendererEvent);
    /**
     * Transform the parsed page link.
     *
     * @param capture - The captured infos.
     * @param sourceHint - The best guess to the source of the match,
     * @returns the replaced content.
     */
    private _replacePageLink;
    /**
     * Handle a page resolution error according to user options.
     *
     * @param err - The error thrown.
     * @param page - The page in the inline tag.
     * @param sourceHint - The best guess to the source of the match,
     */
    private _handleResolveError;
    /**
     * Find the actual page that matches the given page alias.
     *
     * @param pageAlias - The page alias, usually in the form of a {@link NamedPath}.
     * @returns the resolved page.
     */
    private _resolvePageLink;
}
export declare const bindReplaceMarkdown: (plugin: PagesPlugin, themeMethods: IPagesPluginThemeMethods, event: RendererEvent) => MarkdownPagesLinks;
//# sourceMappingURL=markdown-links.d.ts.map